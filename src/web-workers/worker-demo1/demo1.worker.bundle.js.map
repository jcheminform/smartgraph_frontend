{"version":3,"sources":["webpack:///webpack/bootstrap fbce9bef858b4b48a32d?2148","webpack:///./src/web-workers/worker-demo1/demo1.worker.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;AChEA;AAAA,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;AAEtC,mCAAmC;AACnC,MAAM,iBAAiB,GAAQ,WAAW,CAAC;AAE3C,cAAc;AACd,mDAAmD;AACnD,mCAAmC;AACnC,iDAAiD;AACjD,uCAAuC;AACvC,IAAI,8BAA8B,GAAQ,IAAI,CAAC;AAC/C,IAAI,sBAA+B,CAAC;AAEpC,sDAAsD;AACtD,2DAA2D;AAC3D,qDAAqD;AACrD,iDAAiD;AACjD,IAAI,CAAC;IACH,sBAAsB,GAAG,CAAE,MAAM,KAAK,SAAS,CAAE,CAAC;AACpD,CAAC;AAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,sBAAsB,GAAG,KAAK,CAAC,CAAC,uBAAuB;AACzD,CAAC;AAED,aAAa;AACb,SAAS,GAAG,UAAW,KAAK;IAE1B,sBAAsB;IACtB,OAAO,CAAC,GAAG,CAAC,mDAAmD,CAAC,CAAC;IACjE,OAAO,CAAC,GAAG,CAAC,qDAAqD,CAAC,CAAC;IACnE,MAAM,YAAY,GAAG,UAAU,GAAG,KAAK,CAAC,IAAI,GAAG,YAAY,CAAC;IAE5D,EAAE,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC;QAC3B,EAAE,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC;YACpC,MAAM,KAAK,CAAC,gDAAgD,CAAC,CAAC;QAChE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,8BAA8B,CAAC,YAAY,CAAC,CAAC;QAC/C,CAAC;IACH,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,iBAAiB,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;AAEH,CAAC,CAAC;AAEF,cAAc;AACP,MAAM,oBAAoB,GAAQ;IACvC,SAAS,EAAE,SAAS;IACpB,WAAW,EAAE,CAAE,EAAO;QACpB,8BAA8B,GAAG,EAAE,CAAC;IACtC,CAAC;CACF,CAAC;AAAA;AAAA","file":"src/web-workers/worker-demo1/demo1.worker.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 374);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fbce9bef858b4b48a32d","console.log('Web Worker ONE Loaded.');\n\n// prevent TypeScript compile error\nconst customPostMessage: any = postMessage;\n\n// Jasmine API\n// The postMessage method has a different signature\n// in the browser than in a worker.\n// Supply a custom postMessage callback method to\n// prevent TypeScript data type errors.\nlet jasmineSpecPostMessageCallback: any = null;\nlet jasmineSpecIsInBrowser: boolean;\n\n// Strange try / catch couple with boolean logic is to\n// suppress errors in both teh worker and browser contexts.\n// Worker throws an error for window being undefined.\n// TypeScript throws errors for compiling worker.\ntry {\n  jasmineSpecIsInBrowser = ( window !== undefined );\n} catch (e) {\n  jasmineSpecIsInBrowser = false; // We are a web worker!\n}\n\n// Worker API\nonmessage = function ( event ) {\n\n  // worker data process\n  console.log('Web Worker ONE: Message received from main script');\n  console.log('Web Worker ONE: Posting message back to main script');\n  const workerResult = 'Result: ' + event.data + ' in Worker';\n\n  if (jasmineSpecIsInBrowser) { // For jasmine tests running in browser\n    if (!jasmineSpecPostMessageCallback) {\n      throw Error('Need postMessage callback to run jasmine specs');\n    } else {\n      jasmineSpecPostMessageCallback(workerResult);\n    }\n  } else { // running in worker\n    customPostMessage(workerResult);\n  }\n\n};\n\n// Jasmine API\nexport const jasmineSpecWorkerAPI: any = {\n  onmessage: onmessage,\n  postMessage: ( cb: any ) => {\n    jasmineSpecPostMessageCallback = cb;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/web-workers/worker-demo1/demo1.worker.ts"],"sourceRoot":""}